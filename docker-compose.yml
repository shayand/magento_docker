version: "3.1"
    
services:

    mysql:
      image: mysql:${MYSQL_VERSION:-8.0.22}
      command: [ "--default-authentication-plugin=mysql_native_password" ]
      ports:
        - "${MYSQL_PORT:-3306}:3306"
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-very_secret}
        MYSQL_DATABASE: ${MYSQL_DATABASE:-xampp_db}
        MYSQL_USER: ${MYSQL_USER:-xampp_user}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secret}
      restart: unless-stopped
      networks:
        - shared_network
      volumes:
        - db-data2:/var/lib/mysql
      cap_add:
        - SYS_NICE

    webserver:
      image: nginx:alpine
      working_dir: /application
      volumes:
        - .:/application
        - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
        - "${NGINX_PORT:-80}:80"
      depends_on:
        - php-fpm
      restart: unless-stopped
      networks:
        - shared_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:4.9
        depends_on:
          - mysql
        ports:
          - "10003:80"
        environment:
          - PMA_HOST=xampp-db
        volumes:
          - /sessions
          - ./docker/phpmyadmin/save/:/var/www/phpmyadmin/save/
          - ./docker/phpmyadmin/upload/:/var/www/phpmyadmin/upload/
          - ./docker/phpmyadmin/config.php:/etc/phpmyadmin/config.user.inc.php
        restart: unless-stopped
        networks:
          - shared_network
          
    php-fpm:
      build:
        context: ./docker/php-fpm
        dockerfile: Dockerfile
      working_dir: /application
      depends_on:
        - mysql
      volumes:
        - .:/application
        - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      restart: unless-stopped
      networks:
        - shared_network

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
      restart: unless-stopped
      environment:
        - xpack.security.enabled=false
        - discovery.type=single-node
      ports:
        - "${ELASTICSEARCH_PORT:-9200}:9200"
      networks:
        - shared_network
      volumes:
        - db-elastic:/usr/share/elasticsearch/data

    redis:
      image: redis:${REDIS_VERSION:-4}-alpine
      restart: unless-stopped
      command: redis-server --requirepass ${REDIS_PASSWORD:-very_secret}
      volumes:
        - disk-redis:/data
      networks:
        - shared_network
      ports:
        - "${REDIS_PORT:-6379}:6379"

#    rabbitmq:
#      image: rabbitmq:${RABBITMQ_VERSION:-3}-management-alpine
#      ports:
#        - "${RABBITMQ_PORT:-5672}:5672"
#        - "${RABBITMQ_ADMIN_PORT:-15672}:15672"
#      networks:
#        - shared_network
#      volumes:
#        - disk-rabbit:/var/lib/rabbitmq/
#        - ./htdocs/var/log/rabbitmq/:/var/log/rabbitmq

    cron:
      image: alpine:${ALPINE_VERSION:-3.10}
      command: crond -f -d 8
      depends_on:
        - php-fpm
      networks:
        - shared_network
      volumes:
        - ./docker/cron.txt:/etc/crontabs/root:z
      restart: unless-stopped

    minio:
      image: minio/minio
      command: minio server /data
      restart: unless-stopped
      ports:
        - "${MINIO_PORT:-9998}:9000"
      volumes:
        - ./htdocs/pub/fstorage:/data
      networks:
        - shared_network
      environment:
        MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
        MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-C6JWe23W7sxChC}
          
volumes:
  db-data2:
    driver: local
  disk-redis:
    driver: local
  db-elastic:
    driver: local
  disk-rabbit:
    driver: local

networks:
  shared_network:
    driver: bridge
